# General properties
name = PlugIn.Test.JavaScript.Lib.MetaType
type = javascript
description = Returns type metadata for an object.

# Binding array
binding.0.name = code
binding.0.type = data
binding.0.value = function types(o) {\n\
\    let s = typeName(o);\n\
\    if (o === Object.prototype) {\n\
\        s = 'Object.prototype';\n\
\    } else if (o === Array.prototype) {\n\
\        s = 'Array.prototype';\n\
\    } else if (o === Function.prototype) {\n\
\        s = 'Function.prototype';\n\
\    } else if (o === String.prototype) {\n\
\        s = 'String.prototype';\n\
\u00a0   }\n\
\    let proto = o && Object.getPrototypeOf(o);\n\
\    return proto ? [s].concat(types(proto)) : [s];\n\
}\n\
\n\
var res = {\n\
\    chain: types(obj).join(' \\u25BA '),\n\
\    'instanceOf Object': obj instanceof Object,\n\
\    'instanceOf Array': obj instanceof Array,\n\
\    'Array.isArray': Array.isArray(obj),\n\
};\n\
return res;
binding.1.name = typeName
binding.1.type = procedure
binding.1.value = PlugIn.Test.JavaScript.Lib.TypeName
binding.2.name = obj
binding.2.type = argument
binding.2.description = The object to check
