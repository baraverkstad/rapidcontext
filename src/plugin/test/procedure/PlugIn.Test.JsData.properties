# General properties
name = PlugIn.Test.JsData
type = javascript
description = Performs a number of tests on the JavaScript data wrapper.

# Binding array
binding.0.name = code
binding.0.type = data
binding.0.value = function isObject(o) {\n\
\    return o && (typeof(o) === 'object' || typeof(o) === 'function');\n\
}\n\
\n\
function typeName(o) {\n\
\    return isObject(o) ? objectClass(o) : (o === null) ? 'null' : typeof(o);\n\
}\n\
\n\
function objectClass(o) {\n\
\    return Object.prototype.toString.call(o).replace(/^\\[object (.*)\\]$/, "$1");\n\
}\n\
\n\
function union() {\n\
\    function setKey(o, k) {\n\
\        o[k] = true;\n\
\        return o;\n\
\    }\n\
\    var keys = Array.prototype.concat.apply([], arguments);\n\
\    return Object.keys(keys.reduce(setKey, {}));\n\
}\n\
\n\
function metadata(o, depth, keys) {\n\
\    var meta = {\n\
\        type: typeName(o)\n\
\    }\n\
\    if (!isObject(o)) {\n\
\       meta.value = o;\n\
\    } else if (depth > 0) {\n\
\        union(Object.keys(o), Object.getOwnPropertyNames(o), keys ||\u00a0[]).forEach(function (k) {\n\
\            meta[k] = metadata(o[k], depth - 1);\n\
\        });\n\
\        var proto = Object.getPrototypeOf(o);\n\
\        meta.prototype = (proto === o) ? '...' : proto && metadata(proto, depth - 1);\n\
\    }\n\
\    return meta;\n\
}\n\
\n\
var jsList = listApps();\n\
var jsObj = jsList[0];\n\
var res = {\n\
\    list: metadata(jsList, 2),\n\
\    obj: metadata(jsObj, 2),\n\
\    json: {\n\
\        list: JSON.stringify(jsList),\n\
\        obj: JSON.stringify(jsObj)\n\
\    },\n\
\    numbers: [0,1,2,3,4,5,6,7,8,9]\n\
};\n\
return res;
binding.1.name = listApps
binding.1.type = procedure
binding.1.value = System.App.List
