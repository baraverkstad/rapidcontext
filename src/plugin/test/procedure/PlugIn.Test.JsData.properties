# General properties
name = PlugIn.Test.JsData
type = javascript
description = Performs a number of tests on the JavaScript data wrapper.

# Binding array
binding.0.name = code
binding.0.type = data
binding.0.value = var res = { list: { exist: {} }, obj: { exist: {}, props: {} }, numeric: {} };\n\
var jsList = listApps();\n\
res.list.exist.length = jsList.length;\n\
res.list.exist.pop = jsList.pop ? "yes" : "no";\n\
res.list.exist.push = jsList.push ? "yes" : "no";\n\
res.list.exist.reverse = jsList.reverse ? "yes" : "no";\n\
res.list.exist.shift = jsList.shift ? "yes" : "no";\n\
res.list.exist.sort = jsList.sort ? "yes" : "no";\n\
res.list.exist.splice = jsList.splice ? "yes" : "no";\n\
res.list.exist.unshift = jsList.unshift ? "yes" : "no";\n\
res.list.exist.concat = jsList.concat ? "yes" : "no";\n\
res.list.exist.join = jsList.join ? "yes" : "no";\n\
res.list.exist.slice = jsList.slice ? "yes" : "no";\n\
res.list.exist.hasOwnProperty = jsList.hasOwnProperty ? "yes" : "no";\n\
res.list.exist.isPrototypeOf = jsList.isPrototypeOf ? "yes" : "no";\n\
res.list.exist.valueOf = jsList.isPrototypeOf ? "yes" : "no";\n\
res.list.exist.toString = jsList.toString ? "yes" : "no";\n\
var jsObj = jsList[0];\n\
res.obj.exist.hasOwnProperty = jsObj.hasOwnProperty ? "yes" : "no";\n\
res.obj.exist.isPrototypeOf = jsObj.isPrototypeOf ? "yes" : "no";\n\
res.obj.exist.valueOf = jsObj.isPrototypeOf ? "yes" : "no";\n\
res.obj.exist.toString = jsObj.toString ? "yes" : "no";\n\
res.obj.props = {};\n\
for (var n in jsObj) {\n\
\    var value = jsObj[n];\n\
\    var typeName = typeof(value);\n\
\    if (typeName == "object") {\n\
\        if (value == null) {\n\
\            typeName = "null";\n\
\        } else {\n\
\            typeName = value.constructor.name || typeName;\n\
\        }\n\
\    }\n\
\    res.obj.props[n] = typeName;\n\
}\n\
for (var i = 0; i < 10; i++) {\n\
\    res.numeric[i] = i;\n\
}\n\
res;
binding.1.name = listApps
binding.1.type = procedure
binding.1.value = System.App.List
