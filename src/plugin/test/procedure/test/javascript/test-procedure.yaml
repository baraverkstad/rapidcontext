id: test/javascript/test-procedure
type: procedure/javascript
description: >-
    Checks the Java Procedure object wrapping vs. a standard JavaScript Function.
binding:
  - name: code
    type: data
    value: |-
        // Create ProcedureWrapper object
        let jsObj = (function () {
            return function systemStatus() {}; // Same name as bound procedure
        })();
        let javaObj = systemStatus;
        let addOn = { test: 123 };
        Object.assign(jsObj, addOn);
        Object.assign(javaObj, addOn);

        // Return meta information
        var res = {
            type: metaType(javaObj),
            data: javaObj,
            properties: compareValues(javaObj, jsObj),
            ownProperties: compareTypes(javaObj, jsObj),
            prototypeProperties: compareTypes(Object.getPrototypeOf(javaObj), Object.getPrototypeOf(jsObj))
        };
        return res;
  - name: systemStatus
    type: procedure
    value: system/status
  - name: metaType
    type: procedure
    value: test/javascript/lib/meta-type
  - name: compareTypes
    type: procedure
    value: test/javascript/lib/compare-types
  - name: compareValues
    type: procedure
    value: test/javascript/lib/compare-values
