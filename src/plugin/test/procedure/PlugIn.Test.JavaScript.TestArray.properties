# General properties
name = PlugIn.Test.JavaScript.TestArray
type = javascript
description = Checks the Java Array object wrapping vs. a standard JavaScript Array.

# Binding array
binding.0.name = code
binding.0.type = data
binding.0.value = // Create ArrayWrapper object\n\
let jsObj = [];\n\
let javaObj = listApps();\n\
let addOn = { test: 123 };\n\
javaObj.length = "7";\n\
javaObj.push(123);\n\
javaObj.splice(8, 0, { a: 1, b: 2 });\n\
javaObj[9] = [1, 2, 3];\n\
Object.assign(javaObj, addOn);\n\
let copy = Object.assign(JSON.parse(JSON.stringify(javaObj)), addOn);\n\
\n\
// Return meta information\n\
var res = {\n\
\    type: metaType(javaObj),\n\
\    data: javaObj,\n\
\    json: JSON.stringify(javaObj),\n\
\    keys: compareValues(Object.keys(javaObj), Object.keys(copy)),\n\
\    ownProperties: compareTypes(javaObj, copy),\n\
\    prototypeProperties: compareTypes(Object.getPrototypeOf(javaObj), Object.getPrototypeOf(jsObj))\n\
};\n\
return res;
binding.1.name = listApps
binding.1.type = procedure
binding.1.value = System.App.List
binding.2.name = metaType
binding.2.type = procedure
binding.2.value = PlugIn.Test.JavaScript.Lib.MetaType
binding.3.name = compareTypes
binding.3.type = procedure
binding.3.value = PlugIn.Test.JavaScript.Lib.CompareTypes
binding.4.name = compareValues
binding.4.type = procedure
binding.4.value = PlugIn.Test.JavaScript.Lib.CompareValues
