# General properties
name = PlugIn.Test.JavaScript.TestArray
type = javascript
description = Checks the Java Array object wrapping vs. a standard JavaScript Array.

# Binding array
binding.0.name = code
binding.0.type = data
binding.0.value = var KEYS = [\n\
\    "concat",\n\
\    "copyWithin",\n\
\    "entries",\n\
\    "every",\n\
\    "fill",\n\
\    "filter",\n\
\    "find",\n\
\    "findIndex",\n\
\    "forEach",\n\
\    "includes",\n\
\    "indexOf",\n\
\    "join",\n\
\    "keys",\n\
\    "length",\n\
\    "lastIndexOf",\n\
\    "map",\n\
\    "pop",\n\
\    "push",\n\
\    "reduce",\n\
\    "reduceRight",\n\
\    "reverse",\n\
\    "shift",\n\
\    "slice",\n\
\    "some",\n\
\    "sort",\n\
\    "splice",\n\
\    "toLocaleString",\n\
\    "toSource",\n\
\    "toString",\n\
\    "unshift",\n\
\    "values"\n\
];\n\
var res = {\n\
\    "supported": [],\n\
\    "unsupported": [],\n\
\    "typeof": {},\n\
};\n\
var jsObj = [];\n\
var javaObj = listApps();\n\
KEYS.forEach(function (k) {\n\
\    var jsType = typeof(jsObj[k]);\n\
\    var javaType = typeof(javaObj[k]);\n\
\    if (javaType === "undefined" || javaType !== jsType) {\n\
\        res.unsupported.push(k);\n\
\    } else {\n\
\        res.supported.push(k);\n\
\    }\n\
\    res["typeof"][k] = javaType;\n\
});\n\
return res;
binding.1.name = listApps
binding.1.type = procedure
binding.1.value = System.App.List
