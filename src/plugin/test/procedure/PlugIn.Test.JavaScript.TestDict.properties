# General properties
name = PlugIn.Test.JavaScript.TestDict
type = javascript
description = Checks the Java Dict object wrapping vs. a standard JavaScript Object.

# Binding array
binding.0.name = code
binding.0.type = data
binding.0.value = // Create DictWrapper object\n\
let jsObj = {};\n\
let javaObj = systemStatus();\n\
javaObj.number = 123;\n\
javaObj.object = { a: 1, b: 2 };\n\
javaObj.array = [1, 2, 3];\n\
let copy = JSON.parse(JSON.stringify(javaObj));\n\
\n\
// Return meta information\n\
var res = {\n\
\    type: metaType(javaObj),\n\
\    data: javaObj,\n\
\    json: JSON.stringify(javaObj),\n\
\    keys: compareValues(Object.keys(javaObj), Object.keys(copy)),\n\
\    ownProperties: compareTypes(javaObj, copy),\n\
\    prototypeProperties: compareTypes(Object.getPrototypeOf(javaObj), Object.getPrototypeOf(jsObj))\n\
};\n\
return res;
binding.1.name = systemStatus
binding.1.type = procedure
binding.1.value = system/status
binding.2.name = metaType
binding.2.type = procedure
binding.2.value = PlugIn.Test.JavaScript.Lib.MetaType
binding.3.name = compareTypes
binding.3.type = procedure
binding.3.value = PlugIn.Test.JavaScript.Lib.CompareTypes
binding.4.name = compareValues
binding.4.type = procedure
binding.4.value = PlugIn.Test.JavaScript.Lib.CompareValues
