<?xml version="1.0" encoding="ISO-8859-1"?>

<project default="package">

<!-- INITIALIZATION -->
  <property file="build.properties" />
  <tstamp>
    <format property="build.date" pattern="yyyy-MM-dd" />
  </tstamp>
  <property name="build.version" value="${DSTAMP}" />
  <path id="build.classpath">
    <fileset dir="lib" includes="**/*.jar" />
  </path>


<!-- COMPILATION TARGETS -->
  <target name="compile"
          depends="compile-clean,compile-java,compile-plugins"
          description="Compiles the application source code">
    <pathconvert property="manifest.classpath" pathsep=" " refid="build.classpath">
      <mapper type="flatten"/>
    </pathconvert>
    <jar jarfile="lib/${build.name}-${build.version}.jar">
      <manifest>
        <attribute name="Package-Title" value="${build.name}"/>
        <attribute name="Package-Version" value="${build.version}"/>
        <attribute name="Package-Date" value="${build.date}"/>
        <attribute name="Class-Path" value="${manifest.classpath}"/>
        <attribute name="Main-Class" value="${build.mainclass}"/>
      </manifest>
      <fileset dir="classes" />
      <fileset dir="src/java" />
    </jar>
  </target>

  <target name="compile-clean">
    <delete quiet="true">
      <fileset dir="classes" />
      <fileset dir="lib" includes="${build.name}*.jar" />
    </delete>
    <mkdir dir="classes" />
  </target>

  <target name="compile-java">
    <javac srcdir="src/java"
           destdir="classes"
           classpathref="build.classpath"
           target="1.4"
           source="1.4"
           debug="on"
           deprecation="on">
      <!-- TODO: Remove this hack once Java behaves properly -->
      <compilerarg value="-Xbootclasspath/p:${basedir}/lib/js.jar" />
    </javac>
  	<copy file="build.properties" tofile="classes/org/rapidcontext/app/build.properties"/>
  	<propertyfile file="classes/org/rapidcontext/app/build.properties">
  	  <entry key="build.version" value="${build.version}"/>
      <entry key="build.date" value="${build.date}"/>
  	</propertyfile>
  </target>

  <macrodef name="buildplugin">
    <attribute name="id" />
    <sequential>
      <path id="plugin.classpath">
        <path refid="build.classpath" />
        <pathelement location="classes" />
      </path>
      <ant dir="src/plugin/@{id}" antfile="../plugin-build.xml">
        <property name="java.class.path" value="${toString:plugin.classpath}" />
      </ant>
      <delete dir="plugins/@{id}" quiet="true" />
      <mkdir dir="plugins/@{id}" />
      <unzip dest="plugins/@{id}">
        <fileset dir="src/plugin/@{id}" includes="@{id}*.zip" />
      </unzip>
    </sequential>
  </macrodef>

  <target name="compile-plugins">
    <buildplugin id="system" />
    <buildplugin id="local" />
    <buildplugin id="cmdline" />
    <buildplugin id="http" />
    <buildplugin id="jdbc" />
    <buildplugin id="test" />
  </target>


<!-- DOCUMENTATION TARGETS -->
  <target name="doc"
          depends="doc-clean,doc-license,doc-java,doc-js"
          description="Generates the application documentation">
  </target>

  <target name="doc-clean">
    <delete dir="doc/java" quiet="true" />
    <delete dir="doc/js" quiet="true" />
    <mkdir dir="doc/java" />
    <mkdir dir="doc/js" />
  </target>

  <target name="doc-license">
    <copy todir="doc">
      <fileset dir=".">
        <include name="README.txt" />
        <include name="LICENSE.txt" />
      </fileset>
    </copy>
  </target>

  <target name="doc-java">
    <javadoc destdir="doc/java"
             sourcepath="src/java"
             classpathref="build.classpath"
             version="true"
             use="true"
             author="true"
             windowtitle="${build.title} ${build.version} Java API"
             failonerror="true">
      <group title="Application Layer" packages="${build.package}.app:${build.package}.app.*" />
      <group title="Core Library Layer" packages="${build.package}.core:${build.package}.core.*" />
      <group title="Utilities Layer" packages="${build.package}.util:${build.package}.util.*" />
    </javadoc>
  </target>

  <target name="doc-js">
    <property name="jsdoc.dir" value="${basedir}/tools/jsdoc-toolkit" />
    <property name="js.dir" value="${basedir}/src/plugin/system/files/js" />
    <java jar="${jsdoc.dir}/jsrun.jar" fork="true">
      <sysproperty key="jsdoc.dir" value="${jsdoc.dir}" />
      <arg value="${jsdoc.dir}/app/run.js" />
      <arg value="-t=${jsdoc.dir}/templates/jsdoc" />
      <arg value="-d=${basedir}/doc/js" />
      <arg value="${js.dir}/RapidContext.App.js" />
      <arg value="${js.dir}/RapidContext.Procedure.js" />
      <arg value="${js.dir}/RapidContext.SVG.js" />
      <arg value="${js.dir}/RapidContext.UI.js" />
      <arg value="${js.dir}/RapidContext.Util.js" />
      <arg value="${js.dir}/RapidContext.Widget.js" />
    </java>
  </target>


<!-- PACKAGING TARGETS -->
  <target name="package"
          depends="compile,doc"
          description="Builds and packages the application for distribution">
    <delete>
      <fileset dir="." includes="${build.name}.war" />
      <fileset dir="." includes="${build.name}-*.zip" />
    </delete>
    <fixcrlf srcdir="." eol="unix" eof="remove" tab="remove">
      <include name="**/*.txt" />
      <include name="**/*.sh" />
      <include name="**/*.css" />
      <include name="**/*.java" />
      <include name="**/*.js" />
      <include name="**/*.html" />
      <include name="**/*.xml" />
      <include name="**/*.properties" />
      <exclude name="tools/**" />
    </fixcrlf>
    <war destfile="${build.name}.war"
         webxml="src/web/WEB-INF/web.xml">
      <lib dir="lib">
        <exclude name="servlet-api.jar" />
        <exclude name="jetty-*.jar" />
      </lib>
      <zipfileset dir="doc" prefix="doc" />
      <zipfileset dir="plugins" prefix="plugins" />
    </war>
    <zip destfile="${build.name}-${build.version}.zip">
      <zipfileset dir="${basedir}"
                  prefix="${build.name}-${build.version}"
                  filemode="755">
        <include name="bin/*.sh" />
      </zipfileset>
      <zipfileset dir="${basedir}"
                  prefix="${build.name}-${build.version}">
        <include name="README.txt" />
        <include name="LICENSE.txt" />
        <include name="bin/*.bat" />
        <include name="*.war" />
        <include name="lib/**" />
        <include name="plugins/**" />
        <include name="doc/**" />
        <include name="src/**" />
        <exclude name="src/plugin/**/build.number" />
        <exclude name="src/plugin/**/classes/**" />
      </zipfileset>
    </zip>
  </target>

</project>
