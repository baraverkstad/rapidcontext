Known Issues
============
 * BUG: Quick tour broken if focus is moved from Admin app
 * BUGS in IE 7:
    o FileStreamer initialization is broken
    o Incorrect padding on root tab container (only!)
    o Admin: proc argument dialog incorrect size
    o Admin: proc edit dialog incorrect size
    o Admin: plug-in info not having line-breaks
    o Admin: stack trace not having line-breaks
 * Verify with IE 8 & 9.
 * Add ChromeFrame to remove IE 6 issues.
 * Fix issues with Chrome:
    - Random widget init issues (Admin app, plug-in tables....) ???
 * Document Web Browser Support
 * Investigate potential issues with memory leaks


Concern: Legacy Cleanup
=======================
 * Split RapidContext.Widget into several files.
 * Move RapidContext.Util into MochiKit 1.5 as much as possible
 * Proper plug-in version control in legacy storage wrapper


Concern: Install & Startup
==========================
 * Non-Installer Packages:
    o Investigate packaging and start-up on Linux & Windows
 * Installer Packages:
    o Handling of both first time and update installs
    o Simple configuration (built into installer)
    o Support for Windows service installation (see Tomcat)
    o Support for Mac service installation (launchd)
    o Possible installer toolkits:
       - Launch4J
       - WiX
 * Automatic updates
 * Run as service


Concern: Developer Support
==========================
 * General:
    o Use heuristics to create app resource lists if missing
    o Support partial ui.xml files
    o Support custom widgets with UI, JavaScript & CSS fragments
 * Logging:
    o Update MochiKit.Logging to support framework requirements
    o Remove log.js (with console.log functionality or similar)
    o Improve context/stacktrace when triggering calls from signals
    o Add Library support for tracking all created defereds and
      connecting them to each app instance
    o Update MochiKit deferred impl. to throw and/or log errors
      when not caught (see Closure.js impl)
 * Help & Documentation:
    o Change to store topic HTML files in data store
    o Enable WYSIWYG topic editing of HTML
    o Add support for uploading images
    o More example code for RapidContext.Widget components
 * User Interface (ui.xml) Builder
    o New app for creating ui.xml
    o Allow editing existing ui.xml files
    o Store ui.xml files into local plug-in?


Concern: Server Administration
==============================
 * General:
    o Handle request out-of-session correctly (reload page)
    o Support message broadcast and forced reloads
    o Support deferred request cancellation all the way down to the db
 * Admin App:
    o Create new UI structure based on SidePane widget
       - Apps - for apps, web mappings & plug-ins
       - Objects - for server files, procedures, environment
       - Users - for server users and groups
       - Monitor - for local logs, server threads & connections
    o Support managing user sessions:
       - List all active user sessions
       - Terminate individual user sessions
    o Support managing server threads:
       - List all active threads
       - Interrupt threads
    o Enable procedure calls in background thread (supported in back-end)
    o Show owner plug-in for procedures
    o Support removal of procedures located in the 'local' plug-in
    o Display tree of all plug-in files and data
    o Support managing environment and connections:
       - List of environment pools with name & adapter
       - Show details for selected pool - config params and detailed data
         for each open connection
       - Dialog for add and edit or each pool, modifies name and parameters
       - Button for testing each pool
    o Show app owner plug-in
    o Show app resources as table with url, type & other fields
    o New procedures and UI support
       - System.Environment.Test to test connecting to one or all pools
         in the current environment
    o Support creating, editing, renaming and deleting apps
    o Provide UI for plug-in configuration
    o Display connection statistics
    o Improve procedure tree drawing speed
    o Show complete procedure result (format choice)


Concern: Client Programming API
===============================
 * Widgets & UI:
    o Change to use red close button on active dialog and tab?
    o Create new SidePane widget (or similar)
    o Create new FileUpload widget
    o Change RapidContext.UI namespace to contain helper functions
      for the RapidContext apps and default UI
    o Add graphical diagram and plot widget
    o Table Widget: Remember selected line and reselect it on reload
    o Simple API for speedy Tree widget creating child DOM nodes
      only when expanded
    o Constraints for fill-remaining-height/width
 * Other:
    o Add RapidContext.App.callProc() option for creating server thread
      and returning a special deferred that regularly retrieves info


Concern: Server Programming API
===============================
 * JavaScript procedures:
    o Remove existing JavaScript "Packages" symbol access
    o Add new proc binding type for java classes and objects
    o Create JavaScript dynamic wrapper for classes and objects
    o Allow library bindings (MochiKit)
    o Allow library creation
    o Allow dynamic procedure calls (introspection)
 * Other:
    o Add progress ratio to call context information
    o Support background tasks for service listerners or cron jobs
    o Speed up permission control by storing parsed regexp


Concern: Data Storage
=====================
 * Use storage:
    o Add user type to storage
    o Add procedure types to storage
    o Remove registry for procedures (Library class)
    o Add built-in procedures to storage
    o Move plug-in initialization to storage
 * Other storages:
    o Add threads to new dynamic storage
    o Add LDAP gateway?
    o Add SQL/JDBC gateway?
 * Web Storage API:
    o Allow secured access for non-admin users
    o Add client library support for storage objects
    o Add client library support for files in storage
    o Add storage browser inside Admin app
    o Modify Admin app to use storage instead of procedures
    o Remove all procedures for accessing storage objects
 * WebDAV Access:
    o Documentation
    o Add write support 


Concern: Security & Authentication
==================================
 * Display logged in users
 * Enable forced logout of users (session termination)
 * Enforce permission control on any object type
 * Allow form-based login
 * Support anonymous usage if permitted by security settings


Concern: Widgets 2.0
====================
 * Solution to CSS import issues:
    o Injecting CSS from ui.xml file (inline <style> tags)?
 * Embed buildUI and XML serialization into widget base
 * Investigate "onpropertychange" and similar for catching changes:
    o Use single set() and get() methods for all attributes?
    o Hide the two above via clever tricks?
 * Proper event handling, based on MochiKit events:
    o http://dean.edwards.name/weblog/2009/03/callbacks-vs-events/
    o Use setTimeout or similar to handle errors?
 * Icons as one big image map (using DIV instead of IMG)


Concern: Data Mapping & Transformation
======================================
 * Import jpath or similar XPath library
 * Declarative data transformations for procedures and JavaScript
 * Possibility to perform merge two data sources
    o Example: Join two arrays of objects on some identical keys
    o Example: Join duplicated values into single values with "/" or similar
 * Possibility to aggregate a data set
    o Example: Standard GROUP BY operations from databases
    o Example: Add empty groups when data is missing (dates, numbers, etc)
 * Possibility to extend a data set by additional calls
    o Example: Add transaction list for each account
    o Example: Add first group info for each account (avoid n-to-m mapping)


Concern: Plug-in Management
===========================
 * Dynamic download of plug-in zip files
 * Allow plugin installation and deinstallation scripts
 * Load plugin classes in separate classloaders (for unload)
 * Allow updates also of the local and system plug-ins
 * Add packaging and zip creation for the local plug-in
 * Add plug-in dependency checking
 * Enable full server (Java) restart when needed?


Concern: Server Logging
=======================
 * Add logging for direct calls to connection objects (JS wrapper)
 * Create proper server logging configuration
    o Based on JDK 1.4 java.util.logging
    o Simple configuration via accessible properties file
    o Default configuration to files
    o Reset logging when resetting server
 * Support client modifications to server logging configuration
 * Improve server logging facilities
    o Add support for Unix system logging
    o Add support for Windows system logging?
 * Refactor existing log plug-in
    o Allow writing to file instead of database (configurable)
    o Support setting a log level
    o Allow client browsing of logs
    o Move log plug-in into core service


Concern: Web Server
===================
 * Enable virtual hosting
    o Connect apps to virtual host(s)
    o Expose API:s to plug-ins
 * Improve URL resource mapping
    o Allow redirects, 404 handlers, virtual resources, etc
    o Allow plug-in request handlers in Java
 * Add gzip compression for text resources
 * Allow CMS plug-ins to be created


Concern: SSH & Telnet access
============================
 * Create new SSH plug-in for remote scripting
 * Create new Telnet plug-in for remote scripting
